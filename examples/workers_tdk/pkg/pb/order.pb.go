// Code generated by protoc-gen-go. DO NOT EDIT.
// source: helloworld.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
type OrderRequest struct {
	UserId               int32    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Quantity             int32    `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	ProductId            int32    `protobuf:"varint,3,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderRequest) Reset()         { *m = OrderRequest{} }
func (m *OrderRequest) String() string { return proto.CompactTextString(m) }
func (*OrderRequest) ProtoMessage()    {}
func (*OrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_helloworld_777b80eeba5bdf48, []int{0}
}
func (m *OrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderRequest.Unmarshal(m, b)
}
func (m *OrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderRequest.Marshal(b, m, deterministic)
}
func (dst *OrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderRequest.Merge(dst, src)
}
func (m *OrderRequest) XXX_Size() int {
	return xxx_messageInfo_OrderRequest.Size(m)
}
func (m *OrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrderRequest proto.InternalMessageInfo

func (m *OrderRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *OrderRequest) GetQuantity() int32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *OrderRequest) GetProductId() int32 {
	if m != nil {
		return m.ProductId
	}
	return 0
}

// The response message containing the greetings
type OrderReply struct {
	Invoice              string   `protobuf:"bytes,1,opt,name=invoice,proto3" json:"invoice,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderReply) Reset()         { *m = OrderReply{} }
func (m *OrderReply) String() string { return proto.CompactTextString(m) }
func (*OrderReply) ProtoMessage()    {}
func (*OrderReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_helloworld_777b80eeba5bdf48, []int{1}
}
func (m *OrderReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderReply.Unmarshal(m, b)
}
func (m *OrderReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderReply.Marshal(b, m, deterministic)
}
func (dst *OrderReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderReply.Merge(dst, src)
}
func (m *OrderReply) XXX_Size() int {
	return xxx_messageInfo_OrderReply.Size(m)
}
func (m *OrderReply) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderReply.DiscardUnknown(m)
}

var xxx_messageInfo_OrderReply proto.InternalMessageInfo

func (m *OrderReply) GetInvoice() string {
	if m != nil {
		return m.Invoice
	}
	return ""
}

func init() {
	proto.RegisterType((*OrderRequest)(nil), "pb.OrderRequest")
	proto.RegisterType((*OrderReply)(nil), "pb.OrderReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AppClient is the client API for App service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AppClient interface {
	// Sends a greeting
	CreateOrder(ctx context.Context, in *OrderRequest, opts ...grpc.CallOption) (*OrderReply, error)
}

type appClient struct {
	cc *grpc.ClientConn
}

func NewAppClient(cc *grpc.ClientConn) AppClient {
	return &appClient{cc}
}

func (c *appClient) CreateOrder(ctx context.Context, in *OrderRequest, opts ...grpc.CallOption) (*OrderReply, error) {
	out := new(OrderReply)
	err := c.cc.Invoke(ctx, "/pb.App/CreateOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AppServer is the server API for App service.
type AppServer interface {
	// Sends a greeting
	CreateOrder(context.Context, *OrderRequest) (*OrderReply, error)
}

func RegisterAppServer(s *grpc.Server, srv AppServer) {
	s.RegisterService(&_App_serviceDesc, srv)
}

func _App_CreateOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).CreateOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.App/CreateOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).CreateOrder(ctx, req.(*OrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _App_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.App",
	HandlerType: (*AppServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateOrder",
			Handler:    _App_CreateOrder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "helloworld.proto",
}

func init() { proto.RegisterFile("helloworld.proto", fileDescriptor_helloworld_777b80eeba5bdf48) }

var fileDescriptor_helloworld_777b80eeba5bdf48 = []byte{
	// 191 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xc8, 0x48, 0xcd, 0xc9,
	0xc9, 0x2f, 0xcf, 0x2f, 0xca, 0x49, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48,
	0x52, 0x4a, 0xe2, 0xe2, 0xf1, 0x2f, 0x4a, 0x49, 0x2d, 0x0a, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e,
	0x11, 0x12, 0xe7, 0x62, 0x2f, 0x2d, 0x4e, 0x2d, 0x8a, 0xcf, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4,
	0x60, 0x0d, 0x62, 0x03, 0x71, 0x3d, 0x53, 0x84, 0xa4, 0xb8, 0x38, 0x0a, 0x4b, 0x13, 0xf3, 0x4a,
	0x32, 0x4b, 0x2a, 0x25, 0x98, 0xc0, 0x32, 0x70, 0xbe, 0x90, 0x2c, 0x17, 0x57, 0x41, 0x51, 0x7e,
	0x4a, 0x69, 0x72, 0x09, 0x48, 0x1f, 0x33, 0x58, 0x96, 0x13, 0x2a, 0xe2, 0x99, 0xa2, 0xa4, 0xc6,
	0xc5, 0x05, 0xb5, 0xa3, 0x20, 0xa7, 0x52, 0x48, 0x82, 0x8b, 0x3d, 0x33, 0xaf, 0x2c, 0x3f, 0x33,
	0x39, 0x15, 0x6c, 0x03, 0x67, 0x10, 0x8c, 0x6b, 0x64, 0xc1, 0xc5, 0xec, 0x58, 0x50, 0x20, 0x64,
	0xc8, 0xc5, 0xed, 0x5c, 0x94, 0x9a, 0x58, 0x92, 0x0a, 0xd6, 0x24, 0x24, 0xa0, 0x57, 0x90, 0xa4,
	0x87, 0xec, 0x46, 0x29, 0x3e, 0x24, 0x91, 0x82, 0x9c, 0x4a, 0x25, 0x86, 0x24, 0x36, 0xb0, 0x87,
	0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xb1, 0xf7, 0xc2, 0xfb, 0xe4, 0x00, 0x00, 0x00,
}
